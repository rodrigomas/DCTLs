// Rec.709 Linear to Rec.2020 ST2084(OETF)

__DEVICE__ float bt2084(float x) {
float ST2084_M1 = 0.1593017578125f;
float ST2084_M2 = 78.84375f;
float ST2084_C1 = 0.8359375f;
float ST2084_C2 = 18.8515625f;
float ST2084_C3 = 18.6875f;
float x1 = x / 100.0f;
float X = _powf(x1, ST2084_M1);
float X1 = (ST2084_C1 + ST2084_C2 * X) / (1.0f + ST2084_C3 * X);
float X2 = _powf(X1, ST2084_M2);
return X2;
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
	const float RectoXYZ[9] = {0.4124f, 0.3576f, 0.1805f, 0.2126f, 0.7152f, 0.0722f, 0.0193f, 0.1192f, 0.9505f};
     							
	const float XYZtoRTT[9] = {1.716651f, -0.355671f, -0.253366f, -0.666684f, 1.616481f, 0.015769f, 0.0176399f, -0.042771f, 0.942103f};
	
    float xr = RectoXYZ[0] * p_R + RectoXYZ[1] * p_G + RectoXYZ[2] * p_B;
    float xg = RectoXYZ[3] * p_R + RectoXYZ[4] * p_G + RectoXYZ[5] * p_B;
    float xb = RectoXYZ[6] * p_R + RectoXYZ[7] * p_G + RectoXYZ[8] * p_B;
    
    float rr = XYZtoRTT[0] * xr + XYZtoRTT[1] * xg + XYZtoRTT[2] * xb;
    float rg = XYZtoRTT[3] * xr + XYZtoRTT[4] * xg + XYZtoRTT[5] * xb;
    float rb = XYZtoRTT[6] * xr + XYZtoRTT[7] * xg + XYZtoRTT[8] * xb;
    
    const float r = bt2084(rr);
    const float g = bt2084(rg);
    const float b = bt2084(rb);
    
    return make_float3(r, g, b);
}
