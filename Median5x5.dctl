// 5x5 Median average

__DEVICE__ float median(float p_Table[], int m) {
float temp;
int i, j;
for(i = 0; i < m - 1; i++) {
for(j = i + 1; j < m; j++) {
if(p_Table[j] < p_Table[i]) {
temp = p_Table[i];
p_Table[i] = p_Table[j];
p_Table[j] = temp; }}}
return p_Table[(m - 1) / 2]; }


__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, __TEXTURE__ p_TexR, __TEXTURE__ p_TexG, __TEXTURE__ p_TexB)
{
 
 float TableR[25] =
{
    _tex2D(p_TexR, p_X - 2, p_Y - 2),
    _tex2D(p_TexR, p_X - 1, p_Y - 2),
    _tex2D(p_TexR, p_X, p_Y - 2),
    _tex2D(p_TexR, p_X + 1, p_Y - 2),
    _tex2D(p_TexR, p_X + 2, p_Y - 2),
    _tex2D(p_TexR, p_X - 2, p_Y - 1),
    _tex2D(p_TexR, p_X - 1, p_Y - 1),
    _tex2D(p_TexR, p_X, p_Y - 1),
    _tex2D(p_TexR, p_X + 1, p_Y - 1),
    _tex2D(p_TexR, p_X + 2, p_Y - 1),
    _tex2D(p_TexR, p_X - 2, p_Y),
    _tex2D(p_TexR, p_X - 1, p_Y),
    _tex2D(p_TexR, p_X, p_Y),
    _tex2D(p_TexR, p_X + 1, p_Y),
    _tex2D(p_TexR, p_X + 2, p_Y),
    _tex2D(p_TexR, p_X - 2, p_Y + 1),
    _tex2D(p_TexR, p_X - 1, p_Y + 1),
    _tex2D(p_TexR, p_X, p_Y + 1),
    _tex2D(p_TexR, p_X + 1, p_Y + 1),
    _tex2D(p_TexR, p_X + 2, p_Y + 1),
    _tex2D(p_TexR, p_X - 2, p_Y + 2),
    _tex2D(p_TexR, p_X - 1, p_Y + 2),
    _tex2D(p_TexR, p_X, p_Y + 2),
    _tex2D(p_TexR, p_X + 1, p_Y + 2),
    _tex2D(p_TexR, p_X + 2, p_Y + 2),   
};

float TableG[25] =
{
    _tex2D(p_TexG, p_X - 2, p_Y - 2),
    _tex2D(p_TexG, p_X - 1, p_Y - 2),
    _tex2D(p_TexG, p_X, p_Y - 2),
    _tex2D(p_TexG, p_X + 1, p_Y - 2),
    _tex2D(p_TexG, p_X + 2, p_Y - 2),
    _tex2D(p_TexG, p_X - 2, p_Y - 1),
    _tex2D(p_TexG, p_X - 1, p_Y - 1),
    _tex2D(p_TexG, p_X, p_Y - 1),
    _tex2D(p_TexG, p_X + 1, p_Y - 1),
    _tex2D(p_TexG, p_X + 2, p_Y - 1),
    _tex2D(p_TexG, p_X - 2, p_Y),
    _tex2D(p_TexG, p_X - 1, p_Y),
    _tex2D(p_TexG, p_X, p_Y),
    _tex2D(p_TexG, p_X + 1, p_Y),
    _tex2D(p_TexG, p_X + 2, p_Y),
    _tex2D(p_TexG, p_X - 2, p_Y + 1),
    _tex2D(p_TexG, p_X - 1, p_Y + 1),
    _tex2D(p_TexG, p_X, p_Y + 1),
    _tex2D(p_TexG, p_X + 1, p_Y + 1),
    _tex2D(p_TexG, p_X + 2, p_Y + 1),
    _tex2D(p_TexG, p_X - 2, p_Y + 2),
    _tex2D(p_TexG, p_X - 1, p_Y + 2),
    _tex2D(p_TexG, p_X, p_Y + 2),
    _tex2D(p_TexG, p_X + 1, p_Y + 2),
    _tex2D(p_TexG, p_X + 2, p_Y + 2),   
};

float TableB[25] =
{
    _tex2D(p_TexB, p_X - 2, p_Y - 2),
    _tex2D(p_TexB, p_X - 1, p_Y - 2),
    _tex2D(p_TexB, p_X, p_Y - 2),
    _tex2D(p_TexB, p_X + 1, p_Y - 2),
    _tex2D(p_TexB, p_X + 2, p_Y - 2),
    _tex2D(p_TexB, p_X - 2, p_Y - 1),
    _tex2D(p_TexB, p_X - 1, p_Y - 1),
    _tex2D(p_TexB, p_X, p_Y - 1),
    _tex2D(p_TexB, p_X + 1, p_Y - 1),
    _tex2D(p_TexB, p_X + 2, p_Y - 1),
    _tex2D(p_TexB, p_X - 2, p_Y),
    _tex2D(p_TexB, p_X - 1, p_Y),
    _tex2D(p_TexB, p_X, p_Y),
    _tex2D(p_TexB, p_X + 1, p_Y),
    _tex2D(p_TexB, p_X + 2, p_Y),
    _tex2D(p_TexB, p_X - 2, p_Y + 1),
    _tex2D(p_TexB, p_X - 1, p_Y + 1),
    _tex2D(p_TexB, p_X, p_Y + 1),
    _tex2D(p_TexB, p_X + 1, p_Y + 1),
    _tex2D(p_TexB, p_X + 2, p_Y + 1),
    _tex2D(p_TexB, p_X - 2, p_Y + 2),
    _tex2D(p_TexB, p_X - 1, p_Y + 2),
    _tex2D(p_TexB, p_X, p_Y + 2),
    _tex2D(p_TexB, p_X + 1, p_Y + 2),
    _tex2D(p_TexB, p_X + 2, p_Y + 2),   
};

 
const float r = median(TableR, 25);
const float g = median(TableG, 25);
const float b = median(TableB, 25);

return make_float3(r, g, b);

}
