// Waveform x 3

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, __TEXTURE__ p_TexR, __TEXTURE__ p_TexG, __TEXTURE__ p_TexB)
{
    // Scale input signal to zoom into shadows (e.g. 2 equals x2 zoom) 
    
    float ZOOM = 0.5f;
    
    const int space = 4;
    
    const float y = p_Y / (p_Height - 1.0f);
    const float x = p_X / (p_Width - 1.0f);
	float colRGB[3];
    colRGB[0] = colRGB[1] = colRGB[2] = 0.0f;
	float lumRGB[3];
    
    
	for (int i = 0; i < p_Height; i+=space){
	
		lumRGB[0] = _tex2D(p_TexR, p_X * 2, i);
		lumRGB[0] *= ZOOM;
		lumRGB[0] > 0.0025f && lumRGB[0] < (1.0f - y) * 1.005f && lumRGB[0] + 0.0025f > (1.0f - y) * 1.005f ? colRGB[0] += 0.02f * space : 0.0f;
	}
	
	for (int i = 0; i < p_Height; i+=space){
	
		lumRGB[1] = _tex2D(p_TexG, (p_X - p_Width/2)* 2, i);
		lumRGB[1] *= ZOOM;
		lumRGB[1] > 0.0025f && lumRGB[1] < (1.0f - y) * 1.005f && lumRGB[1] + 0.0025f > (1.0f - y) * 1.005f ? colRGB[1] += 0.02f * space : 0.0f;
	}
	
	for (int i = 0; i < p_Height; i+=space){
	
		lumRGB[2] = _tex2D(p_TexB, (p_X - p_Width/2)* 2, i);
		lumRGB[2] *= ZOOM;
		lumRGB[2] += 0.5f;
		lumRGB[2] > 0.5025f && lumRGB[2] < (1.0f - y) * 1.005f && lumRGB[2] + 0.0025f > (1.0f - y) * 1.005f ? colRGB[2] += 0.02f * space : 0.0f;
	}
	
	
	float r = x <= 0.5f ? colRGB[0] : 0.0f;
	float g = x >= 0.5f ? colRGB[1] : 0.0f;
	float b = x >= 0.5f ? colRGB[2] : 0.0f;
	

    return make_float3(r, g, b);
}
